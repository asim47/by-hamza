{"version":3,"sources":["Components/Navbar.js","Components/List.js","Components/RegisterModal.js","Components/LoginModal.js","Components/AddItemModal.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","auth","className","href","id","localStorage","getItem","onClick","logout","rOpen","lOpen","List","useState","list","setList","isLoading","setIsLoading","useEffect","axios","get","then","res","data","updatedList","map","li","key","_id","name","updatedList1","a","async","console","log","config","headers","delete","all","filter","val","handleChange","iOpen","RegisterDialog","Dialog","style","margin","open","ropen","onClose","rclose","aria-labelledby","DialogTitle","type","data-dismiss","aria-label","aria-hidden","DialogContent","width","minHeight","error","color","TextField","autoFocus","variant","value","onChange","handlename","placeholder","fullWidth","email","handleemail","password","handlepassword","Button","handlesubmit","LoginDialog","lopen","lclose","lemail","lpassword","Checkbox","change","checked","inputProps","AddItemDialog","iopen","iclose","iname","handleitem","App","registerOpen","setRegisterOpen","loginOpen","setLoginOpen","itemOpen","setItemOpen","isAuth","setIsAuth","rname","setrName","remail","setrEmail","rpassword","setrPassword","setlEmail","setlPassword","rerror","setrError","setError","setIname","ierror","setIError","setChecked","keepMeLogin","handleRegisterClose","handleItemClose","handleLoginClose","msg","rClose","lClose","e","preventDefault","clear","target","body","post","setItem","user","response","token","event","check","itemName","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ff77dac.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <Fragment>\r\n      {props.auth ? (\r\n        <Fragment>\r\n          <div className=\"navBar\">\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark navBarr\">\r\n              <a className=\"navbar-brand\" href=\"#\">\r\n                ShoppingList\r\n              </a>\r\n              <div\r\n                className=\"collapse navbar-collapse justify-content-end\"\r\n                id=\"nav-content\"\r\n              >\r\n                <ul className=\"navbar-nav\">\r\n                  <li className=\"nav-link\">\r\n                    <b>Welcome {localStorage.getItem(\"username\")}</b>\r\n                  </li>\r\n\r\n                  <li className=\"nav-link\" onClick={props.logout}>\r\n                    Logout\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <div className=\"navBar\">\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark navBarr\">\r\n              <a className=\"navbar-brand\" href=\"#\">\r\n                ShoppingList\r\n              </a>\r\n              <div\r\n                className=\"collapse navbar-collapse justify-content-end\"\r\n                id=\"nav-content\"\r\n              >\r\n                <ul className=\"navbar-nav\">\r\n                  <li className=\"nav-link\" onClick={props.rOpen}>\r\n                    Register\r\n                  </li>\r\n\r\n                  <li className=\"nav-link\" onClick={props.lOpen}>\r\n                    Login\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../App.css\";\r\n\r\nfunction List(props) {\r\n  const [list, setList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const handleChange = async id => {\r\n    console.log(id);\r\n\r\n    let config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": localStorage.getItem(\"token\")\r\n      }\r\n    };\r\n\r\n    let res = await axios.delete(\r\n      `https://assignmentforoffice.herokuapp.com/api/items/${id}`,\r\n      config\r\n    );\r\n    const all = list.filter(val => val._id !== id);\r\n    setList(all);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.auth) {\r\n      axios\r\n        .get(\"https://assignmentforoffice.herokuapp.com/api/items\")\r\n        .then(res => (setList(res.data), setIsLoading(false)));\r\n    } else {\r\n      axios\r\n        .get(\"https://assignmentforoffice.herokuapp.com/api/items\")\r\n        .then(res => (setList(res.data), setIsLoading(false)));\r\n    }\r\n  });\r\n\r\n  const updatedList = list.map(li => {\r\n    return (\r\n      <li key={li._id} className=\"list-group-item\">\r\n        {li.name}\r\n      </li>\r\n    );\r\n  });\r\n  const updatedList1 = list.map(li => {\r\n    return (\r\n      <li key={li._id} className=\"list-group-item\">\r\n        <button\r\n          onClick={() => handleChange(li._id)}\r\n          className=\"btn btn-danger mr-3\"\r\n        >\r\n          Delete\r\n        </button>\r\n        {li.name}\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <Fragment>\r\n      {props.auth ? (\r\n        <div className=\"list\">\r\n          <button className=\"btn btn-primary\" onClick={props.iOpen}>\r\n            Add Item\r\n          </button>\r\n          <br />\r\n          <br />\r\n          {isLoading ? (\r\n            <h5>Loading....</h5>\r\n          ) : (\r\n            <ul className=\"list-group\">{updatedList1}</ul>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"list\">\r\n          <h4 className=\"pl-4\">Please Login to manage Items</h4>\r\n          {isLoading ? (\r\n            <h5>Loading....</h5>\r\n          ) : (\r\n            <ul className=\"list-group\">{updatedList}</ul>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function RegisterDialog(props) {\r\n  return (\r\n    <Dialog\r\n      style={{ margin: \"-100px 0px 0 0px\" }}\r\n      open={props.ropen}\r\n      onClose={props.rclose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">\r\n        Register\r\n        <button\r\n          onClick={props.rclose}\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </DialogTitle>\r\n\r\n      <DialogContent style={{ width: \"500px\", minHeight: \"380px\" }}>\r\n        {props.error && (\r\n          <div className=\"bg bg-danger\" style={{ color: \"white\" }}>\r\n            {props.error}\r\n          </div>\r\n        )}\r\n        <br />\r\n        <div>Name</div>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          id=\"name\"\r\n          value={props.name}\r\n          onChange={props.handlename}\r\n          placeholder=\"Enter Name\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n        <div>Email</div>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          id=\"email\"\r\n          value={props.email}\r\n          onChange={props.handleemail}\r\n          placeholder=\"Email Address\"\r\n          type=\"email\"\r\n          fullWidth\r\n        />\r\n        <div>Password</div>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          id=\"password\"\r\n          value={props.password}\r\n          onChange={props.handlepassword}\r\n          placeholder=\"Enter Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n        />\r\n        <br />\r\n        <br />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={props.handlesubmit}\r\n        >\r\n          Register\r\n        </Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nexport default function LoginDialog(props) {\r\n  return (\r\n    <Dialog\r\n      style={{ margin: \"-100px 0px 0px 0px\" }}\r\n      open={props.lopen}\r\n      onClose={props.lclose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">\r\n        Login\r\n        <button\r\n          onClick={props.lclose}\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </DialogTitle>\r\n\r\n      <DialogContent style={{ width: \"500px\", minHeight: \"340px\" }}>\r\n        {props.error && (\r\n          <div className=\"bg bg-danger\" style={{ color: \"white\" }}>\r\n            {props.error}\r\n          </div>\r\n        )}\r\n        <div>Email</div>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          id=\"email\"\r\n          name=\"lemail\"\r\n          value={props.lemail}\r\n          onChange={props.handleemail}\r\n          placeholder=\"Email Address\"\r\n          type=\"email\"\r\n          fullWidth\r\n        />\r\n        <div>Password</div>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          id=\"password\"\r\n          value={props.lpassword}\r\n          name=\"lpassword\"\r\n          onChange={props.handlepassword}\r\n          placeholder=\"Enter Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n        />\r\n        <Checkbox\r\n          onChange={props.change}\r\n          value={props.checked}\r\n          checked={props.checked}\r\n          color=\"primary\"\r\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n        />\r\n        <span>Keep me login</span>\r\n        <br />\r\n        <br />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={props.handlesubmit}\r\n        >\r\n          Login\r\n        </Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function AddItemDialog(props) {\r\n  return (\r\n    <Dialog\r\n      style={{ margin: \"-100px 0px 0 0px\" }}\r\n      open={props.iopen}\r\n      onClose={props.iclose}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">\r\n        Add To Shopping List\r\n        <button\r\n          onClick={props.iclose}\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </DialogTitle>\r\n\r\n      <DialogContent style={{ width: \"500px\", minHeight: \"250px\" }}>\r\n        {props.error && (\r\n          <div className=\"bg bg-danger\" style={{ color: \"white\" }}>\r\n            {props.error}\r\n          </div>\r\n        )}\r\n        <br />\r\n        <div>Item</div>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          id=\"name\"\r\n          value={props.iname}\r\n          onChange={props.handleitem}\r\n          placeholder=\"Enter Name\"\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n\r\n        <br />\r\n        <br />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={props.handlesubmit}\r\n        >\r\n          Add Item\r\n        </Button>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"./Components/Navbar\";\nimport List from \"./Components/List\";\nimport RegisterDialog from \"./Components/RegisterModal\";\nimport LoginDialog from \"./Components/LoginModal\";\nimport axios from \"axios\";\nimport AddItemDialog from \"./Components/AddItemModal\";\n\nfunction App() {\n  const [registerOpen, setRegisterOpen] = useState(false);\n  const [loginOpen, setLoginOpen] = useState(false);\n  const [itemOpen, setItemOpen] = useState(false);\n  const [isAuth, setIsAuth] = useState(false);\n  const [rname, setrName] = useState(null);\n  const [remail, setrEmail] = useState(null);\n  const [rpassword, setrPassword] = useState(null);\n  const [lemail, setlEmail] = useState(\"\");\n  const [lpassword, setlPassword] = useState(\"\");\n  const [rerror, setrError] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [iname, setIname] = useState(null);\n  const [ierror, setIError] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"token\")) {\n      const keepMeLogin = async () => {\n        try {\n          let config = {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-auth-token\": localStorage.getItem(\"token\")\n            }\n          };\n\n          let res = await axios.get(\n            \"https://assignmentforoffice.herokuapp.com/api/auth/user\",\n            config\n          );\n\n          console.log(res.data);\n          setIsAuth(true);\n        } catch (error) {}\n      };\n\n      keepMeLogin();\n    }\n  }, []);\n\n  const handleRegisterOpen = () => {\n    setRegisterOpen(true);\n  };\n\n  const handleItemOpen = () => {\n    setItemOpen(true);\n  };\n\n  const handleRegisterClose = () => {\n    setRegisterOpen(false);\n    setrError(null);\n    setrPassword(null);\n    setrEmail(null);\n    setrName(null);\n  };\n\n  const handleItemClose = () => {\n    setItemOpen(false);\n    setIError(null);\n    setIname(null);\n  };\n\n  const handleLoginOpen = () => {\n    setLoginOpen(true);\n  };\n\n  const handleLoginClose = () => {\n    setLoginOpen(false);\n    setError(null);\n    setlEmail(null);\n    setlPassword(null);\n  };\n\n  const handlerName = e => {\n    setrName(e.target.value);\n  };\n\n  const handlerEmail = e => {\n    setrEmail(e.target.value);\n  };\n  const handlelEmail = e => {\n    console.log(e.target.value);\n    setlEmail(e.target.value);\n  };\n\n  const handlerPassword = e => {\n    setrPassword(e.target.value);\n  };\n  const handlelPassword = e => {\n    setlPassword(e.target.value);\n  };\n  const handleItemName = e => {\n    setIname(e.target.value);\n  };\n  const msg = \"plz provide all value\";\n\n  const handlerSubmit = async e => {\n    e.preventDefault();\n\n    // if (rname === \"\" || remail === \"\" || rpassword === \"\") return setrError(msg);\n    if (!rname) return setrError(\"Plz Enter your Name\");\n    if (!remail) return setrError(\"Plz Enter your Email\");\n    if (!rpassword) return setrError(\"Plz Enter your Password\");\n\n    const body = {\n      name: rname,\n      email: remail,\n      password: rpassword\n    };\n    try {\n      let res = await axios.post(\n        \"https://assignmentforoffice.herokuapp.com/api/users\",\n        body\n      );\n      localStorage.setItem(\"username\", res.data.user.name);\n      // localStorage.setItem(\"token\", res.data.token);\n      if (res.data) {\n        setIsAuth(true);\n        handleRegisterClose();\n        console.log(res.data);\n      }\n    } catch (error) {\n      setrError(error.response.data.msg);\n    }\n  };\n\n  const handlelSubmit = async e => {\n    e.preventDefault();\n\n    if (lemail === \"\" || lpassword === \"\") {\n      setError(msg);\n    } else {\n      const body = {\n        email: lemail,\n        password: lpassword\n      };\n\n      try {\n        let res = await axios.post(\n          \"https://assignmentforoffice.herokuapp.com/api/auth\",\n          body\n        );\n        if (checked) {\n          localStorage.setItem(\"token\", res.data.token);\n          localStorage.setItem(\"username\", res.data.user.name);\n        } else {\n          localStorage.setItem(\"username\", res.data.user.name);\n        }\n\n        if (res) {\n          setIsAuth(true);\n          handleLoginClose();\n        }\n      } catch (error) {\n        setError(error.response.data.msg);\n      }\n    }\n  };\n\n  const handleISubmit = async e => {\n    e.preventDefault();\n\n    if (iname == \"\") return setIError(msg);\n    const body = {\n      itemName: iname\n    };\n\n    try {\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-auth-token\": localStorage.getItem(\"token\")\n        }\n      };\n      console.log(\"sent\");\n\n      let res = await axios.post(\n        \"https://assignmentforoffice.herokuapp.com/api/items\",\n        body,\n        config\n      );\n      console.log(res.data);\n\n      if (res.data) {\n        // setIsAuth(true);\n        handleItemClose();\n      }\n    } catch (error) {\n      console.log(error);\n      setError(error.response);\n    }\n  };\n\n  const handleLogoutSubmit = e => {\n    e.preventDefault();\n\n    console.log(\"working\");\n\n    localStorage.clear();\n    setIsAuth(false);\n  };\n\n  const handlecChange = event => {\n    if (!checked) {\n      setChecked(event.target.checked);\n      console.log(\" checked\");\n    } else {\n      setChecked(false);\n      console.log(\"not checked\");\n    }\n  };\n\n  return (\n    <div>\n      <Navbar\n        rOpen={handleRegisterOpen}\n        lOpen={handleLoginOpen}\n        rClose={handleRegisterClose}\n        lClose={handleLoginClose}\n        auth={isAuth}\n        logout={handleLogoutSubmit}\n        // name={rname}\n      />\n      <br />\n      <br />\n      <List auth={isAuth} iOpen={handleItemOpen} />\n      <RegisterDialog\n        ropen={registerOpen}\n        rclose={handleRegisterClose}\n        auth={setIsAuth}\n        handlename={handlerName}\n        handleemail={handlerEmail}\n        handlepassword={handlerPassword}\n        handlesubmit={handlerSubmit}\n        name={rname}\n        email={remail}\n        password={rpassword}\n        error={rerror}\n      />\n      <LoginDialog\n        lopen={loginOpen}\n        lclose={handleLoginClose}\n        email={lemail}\n        password={lpassword}\n        handleemail={handlelEmail}\n        handlepassword={handlelPassword}\n        error={error}\n        auth={setIsAuth}\n        handlesubmit={handlelSubmit}\n        change={handlecChange}\n        check={checked}\n      />\n      <AddItemDialog\n        iopen={itemOpen}\n        iclose={handleItemClose}\n        iname={iname}\n        handleitem={handleItemName}\n        handlesubmit={handleISubmit}\n        error={ierror}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}